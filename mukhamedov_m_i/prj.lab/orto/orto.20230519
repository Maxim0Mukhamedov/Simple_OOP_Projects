#include "iostream"

namespace geo2d {
    class Point {
    public:
        Point(const float& x, const float& y): x(x), y(y) {};
        float x = 0;
        float y = 0;
    };
}
namespace geo2d::o2to {
    class Quad {
    public:
        explicit Quad(const float& new_height, const float& new_weigh, const float& pos_x = 0, const float& pos_y = 0) :
            left_up_corn_cord{pos_x,pos_y},
            height(new_height),
            weigh(new_weigh) {}
        void SetW(const float& new_weigh) { weigh = new_weigh;}
        void SetH(const float& new_height) { height = new_height;}
        void SetPoint(const geo2d::Point& new_point) { left_up_corn_cord = new_point;}
        float GetH() noexcept {return height;}
        float GetW() noexcept  {return weigh;}
        geo2d::Point GetP() noexcept  {return left_up_corn_cord;}
    private:
        geo2d::Point left_up_corn_cord{0,0};
        float height = 0.0;
        float weigh = 0.0;
    };
//    class Square : Quad {
//        // Инвариант: высота == ширине
//    };
//    class Rect {
//        // Инвариант: Quad
//    };
}



int main() {
    geo2d::o2to::Quad A = geo2d::o2to::Quad(1,2, -1,3);
    //geo2d::o2to::Square B = geo2d::o2to::Square(1,2, -1,3);
    std::cout << A.GetH() << ' ' << A.GetW() << " (" <<  A.GetP().x << ',' << A.GetP().y << ')' << '\n';
    return 0;
}
